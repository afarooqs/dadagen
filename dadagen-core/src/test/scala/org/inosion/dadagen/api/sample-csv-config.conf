
val employers = db(Connection) (
   select

     *
}



val set1 = 1000 rows (
    col { "id".rownumber },
    col { "col title".name title },
    col { "firstname".name firstname },
    col { "surname".name surname },
    col { "int".number between 10 and 1001 },
    col { "money".number between 1.0 and 10 },
    col { "gender". gender },
    col { "random-string".regexgen ("""TEsting [0-9] [a-zA-z_';:"\[\]]{5}""")  },
    col { "addr_street_line".address street },
    col { "addr_suburb" .address suburb },
    col { "addr_city".   address city },
    col { "addr_district". address district },
    col { "addr_postcode". address postcode },
    col { "template". template ("This row is ${firstname} ${id}") }
)

1000 rows (
  col { "id".rownumber },
  col { "col title".name title },
  col { "firstname".name firstname },
  col { "surname".name surname },
  col { "int".number between 10 and 1001 },
  col { "money".number between 1.0 and 10 },
  col { "gender". gender },
  col { "random-string".regexgen ("""TEsting [0-9] [a-zA-z_';:"\[\]]{5}""")  },
  col { "addr_street_line".address street },
  col { "addr_suburb" .address suburb },
  col { "addr_city".   address city },
  col { "addr_district". address district },
  col { "addr_postcode". address postcode },
  col { "template". template ("This row is ${firstname} ${id}") }
  col { "set1". address postcode },
)